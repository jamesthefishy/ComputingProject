unit MainMenu;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.StdCtrls, Vcl.ExtCtrls,
  IPPeerClient, REST.Client, Data.Bind.Components, Data.Bind.ObjectScope,
  System.Rtti, System.Bindings.Outputs, Vcl.Bind.Editors, Data.Bind.EngExt,
  Vcl.Bind.DBEngExt, Data.DB, Data.Win.ADODB, REST.Authenticator.OAuth,
  IdBaseComponent, IdComponent, IdCustomTCPServer, IdCustomHTTPServer,
  IdHTTPServer,IdContext, Soap.InvokeRegistry, Soap.Rio, Soap.SOAPHTTPClient
  ,IdHTTP, IdTCPConnection, IdTCPClient,System.JSON;

type
  TfrmMainMenu = class(TForm)
    lblTitle: TLabel;
    shpEntryBackGroundLeft: TShape;
    shpEntryBackhroundRight: TShape;
    edtSongEntry1: TEdit;
    edtSongEntry3: TEdit;
    edtSongEntry2: TEdit;
    edtCodeEntry: TEdit;
    lblInstructionsRight1: TLabel;
    lblInstructionsLeft1: TLabel;
    Label1: TLabel;
    lblInstructionsLeft2: TLabel;
    lblInstructionsLeft3: TLabel;
    Label2: TLabel;
    Label3: TLabel;
    RESTClient: TRESTClient;
    RESTIdRequest: TRESTRequest;
    RESTResponse1: TRESTResponse;
    btnPriorUse: TButton;
    btnSongsSearch: TButton;
    btnSettings: TButton;
    MemoContent: TMemo;
    LinkControlToFieldContent: TLinkControlToField;
    BindingsList1: TBindingsList;
    OAuth2Authenticator1: TOAuth2Authenticator;
    ADOTable1: TADOTable;
    ADOQuery1: TADOQuery;
    RESTPropertiesRequest: TRESTRequest;
    RESTResponseProperties: TRESTResponse;
    procedure btnSongsSearchClick(Sender: TObject);
    procedure btnSettingsClick(Sender: TObject);
    procedure FormCreate(Sender: TObject);


  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  frmMainMenu: TfrmMainMenu;

implementation

  uses
  Winapi.ShellApi,SettingsPage;

{$R *.dfm}

procedure TfrmMainMenu.btnSettingsClick(Sender: TObject);
begin
frmSettings.Show;
frmMainMenu.Hide;
end;

procedure TfrmMainMenu.btnSongsSearchClick(Sender: TObject);
var
  i: Integer;
  //Jsonvariables
  tracks,items:TJSONObject;
  Song2,SongId1,SongID2,SongID3,Song1,Song3: string;
begin

  Song1:=edtSongEntry1.Text;//More managable variable names
  Song2:=edtSongEntry2.Text;
  Song3:=edtSongEntry3.Text;
  
  //First Song
  Song1  := stringreplace(Song1, ' ', '%20',[rfReplaceAll, rfIgnoreCase]);
  //Search cannot include spaces so replaces them with +
  RESTIdRequest.Resource:='//search?q='+Song1+'&type=track';
  //Sets up the search parameters
  RESTIdRequest.Execute;//Runs the search
  showmessage(RESTIdRequest.FullResource);//Dummy Test Stub
  tracks:=RESTResponse1.JSONValue as TJSONObject;
  items:=tracks.Values['items'] as TJSONObject;
  SongId1:=items.Values['id'].Value;
  showmessage(SongId1);


  {//Second Song
    Song2  := stringreplace(Song2, ' ', '%20',[rfReplaceAll, rfIgnoreCase]);
      //Search cannot include spaces so replaces them with +
        RESTIdRequest.Resource:='search?q='+Song2+'&type=track';
          //Sets up the search parameters
            RESTIdRequest.Execute;//Runs the search
              showmessage(RESTIdRequest.FullResource);//Dummy Test Stub


                  //Third Song
                    Song3  := stringreplace(Song3, ' ', '%20',[rfReplaceAll, rfIgnoreCase]);
                      //Search cannot include spaces so replaces them with +
                        RESTIdRequest.Resource:='search?q='+Song3+'&type=track';
                          //Sets up the search parameters
                            RESTIdRequest.Execute;//Runs the search
                              showmessage(RESTIdRequest.FullResource);//Dummy Test Stub

                              }


  end;


procedure TfrmMainMenu.FormCreate(Sender: TObject);
begin
//Self.OAuth2Authenticator1.AccessToken:=
ShellExecute(0, 'OPEN', PChar('https://accounts.spotify.com/authorize?client_id=e7b2c8f2ecf04736be11b1cb493cdd9d&redirect_uri=http://localhost:9090/&scope=user-read-private%20user-read-email&response_type=token&state=123'), '', '', SW_SHOWNORMAL);

end;

end.
